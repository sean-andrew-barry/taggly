export * from "/js/Parser/Token/Keyword.js";
export * from "/js/Parser/Token/CSS/Keyword/Unit.js";
export * from "/js/Parser/Token/CSS/Keyword/Pseudo.js";
export * from "/js/Parser/Token/CSS/Keyword/Color.js";

import {Keyword} from "/js/Parser/Token/Keyword.js";

export class Azimuth extends Keyword { Parse(p){ return p.Read("azimuth") } }
export class Background extends Keyword { Parse(p){ return p.Read("background") } }
export class BackgroundAttachment extends Keyword { Parse(p){ return p.Read("background-attachment") } }
export class BackgroundColor extends Keyword { Parse(p){ return p.Read("background-color") } }
export class BackgroundImage extends Keyword { Parse(p){ return p.Read("background-image") } }
export class BackgroundPosition extends Keyword { Parse(p){ return p.Read("background-position") } }
export class BackgroundRepeat extends Keyword { Parse(p){ return p.Read("background-repeat") } }
export class Border extends Keyword { Parse(p){ return p.Read("border") } }
export class BorderCollapse extends Keyword { Parse(p){ return p.Read("border-collapse") } }
export class BorderColor extends Keyword { Parse(p){ return p.Read("border-color") } }
export class BorderSpacing extends Keyword { Parse(p){ return p.Read("border-spacing") } }
export class BorderStyle extends Keyword { Parse(p){ return p.Read("border-style") } }
export class BorderTop extends Keyword { Parse(p){ return p.Read("border-top") } }
export class BorderRight extends Keyword { Parse(p){ return p.Read("border-right") } }
export class BorderBottom extends Keyword { Parse(p){ return p.Read("border-bottom") } }
export class BorderLeft extends Keyword { Parse(p){ return p.Read("border-left") } }
export class BorderTopColor extends Keyword { Parse(p){ return p.Read("border-top-color") } }
export class BorderRightColor extends Keyword { Parse(p){ return p.Read("border-right-color") } }
export class BorderBottomColor extends Keyword { Parse(p){ return p.Read("border-bottom-color") } }
export class BorderLeftColor extends Keyword { Parse(p){ return p.Read("border-left-color") } }
export class BorderTopStyle extends Keyword { Parse(p){ return p.Read("border-top-style") } }
export class BorderRightStyle extends Keyword { Parse(p){ return p.Read("border-right-style") } }
export class BorderBottomStyle extends Keyword { Parse(p){ return p.Read("border-bottom-style") } }
export class BorderLeftStyle extends Keyword { Parse(p){ return p.Read("border-left-style") } }
export class BorderTopWidth extends Keyword { Parse(p){ return p.Read("border-top-width") } }
export class BorderRightWidth extends Keyword { Parse(p){ return p.Read("border-right-width") } }
export class BorderBottomWidth extends Keyword { Parse(p){ return p.Read("border-bottom-width") } }
export class BorderLeftWidth extends Keyword { Parse(p){ return p.Read("border-left-width") } }
export class BorderWidth extends Keyword { Parse(p){ return p.Read("border-width") } }
export class Bottom extends Keyword { Parse(p){ return p.Read("bottom") } }
export class CaptionSide extends Keyword { Parse(p){ return p.Read("caption-side") } }
export class Clear extends Keyword { Parse(p){ return p.Read("clear") } }
export class Clip extends Keyword { Parse(p){ return p.Read("clip") } }
export class Color extends Keyword { Parse(p){ return p.Read("color") } }
export class Content extends Keyword { Parse(p){ return p.Read("content") } }
export class CounterIncrement extends Keyword { Parse(p){ return p.Read("counter-increment") } }
export class CounterReset extends Keyword { Parse(p){ return p.Read("counter-reset") } }
export class Cue extends Keyword { Parse(p){ return p.Read("cue") } }
export class CueAfter extends Keyword { Parse(p){ return p.Read("cue-after") } }
export class CueBefore extends Keyword { Parse(p){ return p.Read("cue-before") } }
export class Cursor extends Keyword { Parse(p){ return p.Read("cursor") } }
export class Direction extends Keyword { Parse(p){ return p.Read("direction") } }
export class Display extends Keyword { Parse(p){ return p.Read("display") } }
export class Elevation extends Keyword { Parse(p){ return p.Read("elevation") } }
export class EmptyCells extends Keyword { Parse(p){ return p.Read("empty-cells") } }
export class Float extends Keyword { Parse(p){ return p.Read("float") } }
export class Font extends Keyword { Parse(p){ return p.Read("font") } }
export class FontFamily extends Keyword { Parse(p){ return p.Read("font-family") } }
export class FontSize extends Keyword { Parse(p){ return p.Read("font-size") } }
export class FontSizeAdjust extends Keyword { Parse(p){ return p.Read("font-size-adjust") } }
export class FontStretch extends Keyword { Parse(p){ return p.Read("font-stretch") } }
export class FontStyle extends Keyword { Parse(p){ return p.Read("font-style") } }
export class FontVariant extends Keyword { Parse(p){ return p.Read("font-variant") } }
export class FontWeight extends Keyword { Parse(p){ return p.Read("font-weight") } }
export class Height extends Keyword { Parse(p){ return p.Read("height") } }
export class Left extends Keyword { Parse(p){ return p.Read("left") } }
export class LetterSpacing extends Keyword { Parse(p){ return p.Read("letter-spacing") } }
export class LineHeight extends Keyword { Parse(p){ return p.Read("line-height") } }
export class ListStyle extends Keyword { Parse(p){ return p.Read("list-style") } }
export class ListStyleImage extends Keyword { Parse(p){ return p.Read("list-style-image") } }
export class ListStylePosition extends Keyword { Parse(p){ return p.Read("list-style-position") } }
export class ListStyleType extends Keyword { Parse(p){ return p.Read("list-style-type") } }
export class Margin extends Keyword { Parse(p){ return p.Read("margin") } }
export class MarginTop extends Keyword { Parse(p){ return p.Read("margin-top") } }
export class MarginRight extends Keyword { Parse(p){ return p.Read("margin-right") } }
export class MarginBottom extends Keyword { Parse(p){ return p.Read("margin-bottom") } }
export class MarginLeft extends Keyword { Parse(p){ return p.Read("margin-left") } }
export class MarkerOffset extends Keyword { Parse(p){ return p.Read("marker-offset") } }
export class Marks extends Keyword { Parse(p){ return p.Read("marks") } }
export class MaxHeight extends Keyword { Parse(p){ return p.Read("max-height") } }
export class MaxWidth extends Keyword { Parse(p){ return p.Read("max-width") } }
export class MinHeight extends Keyword { Parse(p){ return p.Read("min-height") } }
export class MinWidth extends Keyword { Parse(p){ return p.Read("min-width") } }
export class Orphans extends Keyword { Parse(p){ return p.Read("orphans") } }
export class Outline extends Keyword { Parse(p){ return p.Read("outline") } }
export class OutlineColor extends Keyword { Parse(p){ return p.Read("outline-color") } }
export class OutlineStyle extends Keyword { Parse(p){ return p.Read("outline-style") } }
export class OutlineWidth extends Keyword { Parse(p){ return p.Read("outline-width") } }
export class Overflow extends Keyword { Parse(p){ return p.Read("overflow") } }
export class Padding extends Keyword { Parse(p){ return p.Read("padding") } }
export class PaddingTop extends Keyword { Parse(p){ return p.Read("padding-top") } }
export class PaddingRight extends Keyword { Parse(p){ return p.Read("padding-right") } }
export class PaddingBottom extends Keyword { Parse(p){ return p.Read("padding-bottom") } }
export class PaddingLeft extends Keyword { Parse(p){ return p.Read("padding-left") } }
export class Page extends Keyword { Parse(p){ return p.Read("page") } }
export class PageBreakAfter extends Keyword { Parse(p){ return p.Read("page-break-after") } }
export class PageBreakBefore extends Keyword { Parse(p){ return p.Read("page-break-before") } }
export class PageBreakInside extends Keyword { Parse(p){ return p.Read("page-break-inside") } }
export class Pause extends Keyword { Parse(p){ return p.Read("pause") } }
export class PauseAfter extends Keyword { Parse(p){ return p.Read("pause-after") } }
export class PauseBefore extends Keyword { Parse(p){ return p.Read("pause-before") } }
export class Pitch extends Keyword { Parse(p){ return p.Read("pitch") } }
export class PitchRange extends Keyword { Parse(p){ return p.Read("pitch-range") } }
export class PlayDuring extends Keyword { Parse(p){ return p.Read("play-during") } }
export class Position extends Keyword { Parse(p){ return p.Read("position") } }
export class Quotes extends Keyword { Parse(p){ return p.Read("quotes") } }
export class Richness extends Keyword { Parse(p){ return p.Read("richness") } }
export class Right extends Keyword { Parse(p){ return p.Read("right") } }
export class Size extends Keyword { Parse(p){ return p.Read("size") } }
export class Speak extends Keyword { Parse(p){ return p.Read("speak") } }
export class SpeakHeader extends Keyword { Parse(p){ return p.Read("speak-header") } }
export class SpeakNumeral extends Keyword { Parse(p){ return p.Read("speak-numeral") } }
export class SpeakPunctuation extends Keyword { Parse(p){ return p.Read("speak-punctuation") } }
export class SpeechRate extends Keyword { Parse(p){ return p.Read("speech-rate") } }
export class Stress extends Keyword { Parse(p){ return p.Read("stress") } }
export class TableLayout extends Keyword { Parse(p){ return p.Read("table-layout") } }
export class TextAlign extends Keyword { Parse(p){ return p.Read("text-align") } }
export class TextDecoration extends Keyword { Parse(p){ return p.Read("text-decoration") } }
export class TextIndent extends Keyword { Parse(p){ return p.Read("text-indent") } }
export class TextShadow extends Keyword { Parse(p){ return p.Read("text-shadow") } }
export class TextTransform extends Keyword { Parse(p){ return p.Read("text-transform") } }
export class Top extends Keyword { Parse(p){ return p.Read("top") } }
export class UnicodeBidi extends Keyword { Parse(p){ return p.Read("unicode-bidi") } }
export class VerticalAlign extends Keyword { Parse(p){ return p.Read("vertical-align") } }
export class Visibility extends Keyword { Parse(p){ return p.Read("visibility") } }
export class VoiceFamily extends Keyword { Parse(p){ return p.Read("voice-family") } }
export class Volume extends Keyword { Parse(p){ return p.Read("volume") } }
export class WhiteSpace extends Keyword { Parse(p){ return p.Read("white-space") } }
export class Widows extends Keyword { Parse(p){ return p.Read("widows") } }
export class Width extends Keyword { Parse(p){ return p.Read("width") } }
export class WordSpacing extends Keyword { Parse(p){ return p.Read("word-spacing") } }
export class ZIndex extends Keyword { Parse(p){ return p.Read("z-index") } }

export class Important extends Keyword { Parse(p){ return p.Read("!important"); } }
export class Transparent extends Keyword { Parse(p){ return p.Read("transparent"); } }

export class Inherit extends Keyword { Parse(p){ return p.Read("inherit"); } }
export class Initial extends Keyword { Parse(p){ return p.Read("initial"); } }
export class Unset extends Keyword { Parse(p){ return p.Read("unset"); } }
export class Revert extends Keyword { Parse(p){ return p.Read("revert"); } }

export class Thin extends Keyword { Parse(p){ return p.Read("thin"); } }
export class Medium extends Keyword { Parse(p){ return p.Read("medium"); } }
export class Thick extends Keyword { Parse(p){ return p.Read("thick"); } }

export class Collapse extends Keyword { Parse(p){ return p.Read("collapse"); } }
export class Left extends Keyword { Parse(p){ return p.Read("left"); } }
export class Right extends Keyword { Parse(p){ return p.Read("right"); } }
export class InlineStart extends Keyword { Parse(p){ return p.Read("inline-start"); } }
export class InlineEnd extends Keyword { Parse(p){ return p.Read("inline-end"); } }

export class None extends Keyword { Parse(p){ return p.Read("none"); } }
export class Hidden extends Keyword { Parse(p){ return p.Read("hidden"); } }
export class Dotted extends Keyword { Parse(p){ return p.Read("dotted"); } }
export class Dashed extends Keyword { Parse(p){ return p.Read("dashed"); } }
export class Solid extends Keyword { Parse(p){ return p.Read("solid"); } }
export class Double extends Keyword { Parse(p){ return p.Read("double"); } }
export class Groove extends Keyword { Parse(p){ return p.Read("groove"); } }
export class Ridge extends Keyword { Parse(p){ return p.Read("ridge"); } }
export class Inset extends Keyword { Parse(p){ return p.Read("inset"); } }
export class Outset extends Keyword { Parse(p){ return p.Read("outset"); } }

export class URL extends Keyword { Parse(p){ return p.Read("url"); } }
export class RGB extends Keyword { Parse(p){ return p.Read("rgb"); } }
export class RGBA extends Keyword { Parse(p){ return p.Read("rgba"); } }
export class HSL extends Keyword { Parse(p){ return p.Read("hsl"); } }
export class HSLA extends Keyword { Parse(p){ return p.Read("hsla"); } }
export class Min extends Keyword { Parse(p){ return p.Read("min"); } }
export class Max extends Keyword { Parse(p){ return p.Read("max"); } }
export class Clamp extends Keyword { Parse(p){ return p.Read("clamp"); } }
export class Calc extends Keyword { Parse(p){ return p.Read("calc"); } }
export class Toggle extends Keyword { Parse(p){ return p.Read("toggle"); } }
export class Attr extends Keyword { Parse(p){ return p.Read("attr"); } }
